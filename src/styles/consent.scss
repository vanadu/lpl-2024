// .content {
//   position: relative;
//   z-index: 1;
//   pointer-events: none;
//   touch-action: none;
//   overflow-x: hidden;
//   overflow-y: hidden;
// }



// !VA 03.25 This is it for blocking scrolling of all body.
html, body {
  // overflow-y: hidden !important;
  // height: 100%;
  // margin: 0 !important;
}


// !VA Problem here - when overlay is active you can't access the modal...and that's going to be a real PITA to fix. 
.consent-overlay {
  position: fixed;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  z-index: 999;
  background-color: rgba(0, 0, 0, 0.4);
}



// !VA Consent form
.consent-wrap {
  @include desktop {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    bottom: 0 !important;
    padding: 0 2.5rem;
    // top: 0;
  }
  position: fixed;
  left: 0;
  // bottom: 0;
  // top: 0;
  display: block;
  // flex-direction: column;
  // justify-content: flex-start;
  width: 100%;
  color: black;
  border-top: 1px solid $primary_color;
  background-color:white !important;  
  z-index: 99;
  overflow-y: scroll;
  // background: rgba(0, 0, 255, .3) !important; //devblue

}

.consent-content {
  @include tablet {
    // !VA I have no idea how flex works, but it makes the container 300px tall on tablet...
    flex: none;
  }
  @include desktop {
    width: 60%;
    overflow: hidden;
    // !VA I have no idea how flex works, but it makes the container 300px tall on tablet...
    flex: none;
  }

  flex: 1 0 300px;
  font-family: $primary_font;
  font-weight: 300;
  font-size: $rootConsentFontSize;
  line-height: $rootConsentLineHeight;
  // !VA 03.24
  overflow-y: scroll;
}

.consent-content p {
  @include mphone {
    font-size: $mphoneConsentFontSize;
    line-height: $mphoneConsentLineHeight;
  }
  @include lphone {
    font-size: $lphoneConsentFontSize;
    line-height: $lphoneConsentLineHeight;
  }
  @include tablet {
    font-size: $tabletConsentFontSize;
    line-height: $tabletConsentLineHeight;
  }
  @include desktop {
    font-size: $desktopConsentFontSize;
    line-height: $desktopConsentLineHeight;
  }
  @include ldesktop {
    font-size: $tabletConsentFontSize;
    line-height: $tabletConsentLineHeight;
  }
  padding: .5em .5rem .25rem 1rem; 
  font-size: $rootConsentFontSize;
  line-height: $rootConsentLineHeight;
}

// !VA Why is the modal defined here at all?
// .consent-button-wrap, .consent-policy-modal {
.consent-button-wrap, .consent-policy-button-wrap  {

  @include desktop {
    display: flex;
    flex-direction: column;
  }

  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.consent-button-wrap {
  margin-bottom: 1.25rem; 
}

.consent-policy-button-wrap {
  @include desktop {
    width: 400px;
  }
  margin: .5rem 0 .75rem;
}

.consent-accept-button, .consent-decline-button, .consent-policy-button   {
  @include mphone {
    font-size: $mphoneConsentFontSize;
    line-height: $mphoneConsentLineHeight;
  }
  @include lphone {
    font-size: $lphoneConsentFontSize;
    line-height: $lphoneConsentLineHeight;
  }
  @include tablet {
    font-size: $tabletConsentFontSize;
    line-height: $tabletConsentLineHeight;
  }
  @include desktop {
    font-size: $desktopConsentFontSize;
    line-height: $desktopConsentLineHeight;
  }
  @include ldesktop {
    font-size: $ldesktopConsentFontSize;
    line-height: $ldesktopConsentLineHeight;
    line-height: 2rem;
  }
  padding: .375rem 0 .5rem;
  font-size: $rootConsentFontSize;
  line-height: $rootConsentLineHeight;
  font-weight: 600;
  border: none;
}

.consent-policy-button {
  width: 100%;
  margin: 0 .5rem;
 }

.consent-accept-button {
  width: 46%;
  color: rgb(78, 80, 59);
  color: $dark_text_color;
  color: $light_text_color;
  background: rgb(255, 212, 45);
  background: #0d8400;
  margin-left: .5rem;
}

.consent-decline-button {
  width: 46%;
  color: rgb(78, 80, 59);
  color: $dark_text_color;
  color: $light_text_color;
  background: #bf0000;
  margin-right: .5rem;
  // background: rgb(255, 212, 45);
}



.ReactModalPortal {
  // !VA 03.26 Position is necessary to enable z-index, which is necessary to cover the positioned consent content.
  position: relative;
  width: 100%;
  z-index: 100;
  background: rgba(0, 0, 255, .3) !important; //devblue
}

// !VA The wrapper for the modal in which the policy is displayed
.consent-policy-modal {
  @include tablet {
    width: 600px;
    height: 700px;
  }
  @include desktop {
    width: 600px !important;
    height: 700px !important;
    // top: 100px;
  }
  @include ldesktop {
    width: 600px !important;
    height: 700px !important;
    // top: 100px;
  }
  // !VA 03.27 the following styles are copied straight from the inline styles created by the module

  position: absolute;
  inset: 50% auto auto 50%;
  border: 1px solid rgb(204, 204, 204);
  background: rgb(255, 255, 255);
  overflow: auto;
  border-radius: 4px;
  outline: none;
  // !VA 03.27 Disable the default padding and use only padding-right enough to bump the scrollbar away from the edge of the device.
  // padding: 20px;
  padding-right: .25rem;
  margin-right: -50%;
  transform: translate(-50%, -50%);
  // !VA 03.27 height and width are necessary, otherwise the container won't scroll
  height: 100vh;
  width:100vw;
}

// !VA Set the height of the policy text. It should only reach down to the top of privacy-policy-close-container
.privacy-policy-container {
  @include mphone {
    padding: 1.5rem 1rem 0 1rem;
  }
  @include lphone {
    height: 91vh;
    padding: 1.5rem 1rem 0 1rem;
  }
  @include tablet {
    height: 640px;
  }
  @include desktop {
    height: 640px;
  }
  position: relative;
  width: 100%;
  height: 90vh;
  // height: 100%;
  padding: .5rem 1rem 0 1rem;
  overflow-y: scroll !important;
  // max-height: 90%;
}

.privacy-policy-content p, .privacy-policy-content li {
  margin-bottom: .25rem;
}

// !VA Set the height of the close button container. It should meet where privacy-policy-close-container bottoms out.
.privacy-policy-close-container {
  @include mphone {
    height: 4.5rem;
  }
  position: fixed;
  left: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 4rem;
  padding: 0 1rem;
}

// !VA This needs to be adjusted, should have the consent form variables for FontSize and LineHeight
.privacy-policy-close {
  @include mphone {
    height: 2.5rem;
    font-size: $mphoneConsentFontSize;
    line-height: $mphoneConsentLineHeight;
  }
  @include lphone {
    height: 2.5rem;
    font-size: $lphoneConsentFontSize;
    line-height: $lphoneConsentLineHeight;
  }
  @include tablet {
    height: 2.5rem;
    font-size: $tabletConsentFontSize;
    line-height: $tabletConsentLineHeight;
  }
  @include ldesktop {
    width: 200px;
    height: 40px;
    font-size: $ldesktopConsentFontSize;
    line-height: $ldesktopConsentLineHeight;
  }
  // width: 80%;
  flex: 0 0 auto;
  height: 2rem;
  width: 100%;
  color: $dark_text_color;
  font-size: $rootConsentFontSize;
  line-height: $rootConsentLineHeight;
  font-weight: 600;
  cursor: pointer;
  box-shadow: none;
  border-radius: none;
  border: none;
  background: #bfbfbf;
  z-index: 999;
}

.privacy-policy-content h2, .privacy-policy-content p, .privacy-policy-content li {
  @include mphone {
    font-size: $mphoneConsentFontSize;
    line-height: $mphoneConsentLineHeight;
  }
  @include lphone {
    font-size: $lphoneConsentFontSize;
    line-height: $lphoneConsentLineHeight;
  }
  @include tablet {
    font-size: $tabletConsentFontSize;
    line-height: $tabletConsentLineHeight;
  }
  @include desktop {
    font-size: $desktopConsentFontSize;
    line-height: $desktopConsentLineHeight;
  }
  @include ldesktop {
    font-size: $tabletConsentFontSize;
    line-height: $tabletConsentLineHeight;
    line-height: 2rem;
  }
  font-size: $rootConsentFontSize;
  line-height: $rootConsentLineHeight;
  color: $dark_text_color;
}

.privacy-policy-content h2{
  margin-bottom: .25rem;
  text-align: center;
}

.privacy-policy-content li {
  margin-left: 1rem;
}



